//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace ForestFindr.Web.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ForestFindrEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ForestFindrEntities object using the connection string found in the 'ForestFindrEntities' section of the application configuration file.
        /// </summary>
        public ForestFindrEntities() : base("name=ForestFindrEntities", "ForestFindrEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ForestFindrEntities object.
        /// </summary>
        public ForestFindrEntities(string connectionString) : base(connectionString, "ForestFindrEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ForestFindrEntities object.
        /// </summary>
        public ForestFindrEntities(EntityConnection connection) : base(connection, "ForestFindrEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countrys
        {
            get
            {
                if ((_Countrys == null))
                {
                    _Countrys = base.CreateObjectSet<Country>("Countrys");
                }
                return _Countrys;
            }
        }
        private ObjectSet<Country> _Countrys;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countrys EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountrys(Country country)
        {
            base.AddObject("Countrys", country);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForestFickrModel", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Country CreateCountry(global::System.Int32 id)
        {
            Country country = new Country();
            country.id = id;
            return country;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name_iso
        {
            get
            {
                return _name_iso;
            }
            set
            {
                Onname_isoChanging(value);
                ReportPropertyChanging("name_iso");
                _name_iso = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name_iso");
                Onname_isoChanged();
            }
        }
        private global::System.String _name_iso;
        partial void Onname_isoChanging(global::System.String value);
        partial void Onname_isoChanged();

        #endregion
    
    }

    #endregion
    
}
